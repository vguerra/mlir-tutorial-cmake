#ifndef LIB_DIALECT_POLY_POLYOPS_TD_
#define LIB_DIALECT_POLY_POLYOPS_TD_

include "PolyTypes.td"

class Poly_BinOp<string mnemonic> : Op<Poly_Dialect, mnemonic> {
    let arguments = (ins Polynomial:$lhs, Polynomial:$rhs);
    let results = (outs Polynomial:$output);
    let assemblyFormat = "$lhs `,` $rhs attr-dict `:` `(` type($lhs) `,` type($rhs) `)` `->` type($output)";
}

def Poly_AddOp : Poly_BinOp<"add"> {
    let summary = "Addition operation between polynomials";
}

def Poly_SubOp : Poly_BinOp<"sub"> {
    let summary = "Subtraction operation between polynomials.";
}

def Poly_MulOp : Poly_BinOp<"mul"> {
    let summary = "Multiplication operation between polynomials.";
}

#endif  // LIB_DIALECT_POLY_POLYOPS_TD_